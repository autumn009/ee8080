; This is a diagnostic for ee8080 CPU
; If all test was passed, all virtual LEDs in port 0FFH are on.
work	equ	8000h
work2	equ	8001h
stack	equ	0f000h
stack2	equ	0e000h

	org	0h
	jmp	start

	org	30h
	mvi	a,60h
	ret

	org	28h
	mvi	a,70h
	ret

	org	40h
start:
	lxi	sp,stack
	mvi b,78h
	mov a,b
	cpi	78h
	jnz	fail
	mvi	a,12h
	cpi	12h
	jnz	fail
	lxi	h,3456h
	mvi	a,34h
	cmp	h
	jnz	fail
	mvi	a,56h
	cmp	l
	jnz	fail
	mvi	a,1
	mvi	c,2
	add	c
	cpi	3
	jnz	fail
	adi	3
	cpi	6
	jnz	fail
	mvi	a,55h
	sta	work
	mvi	a,0aah
	lda	work
	cpi	55h
	jnz	fail
	mvi	a,56h
	lxi	d,0
	lxi	b,work
	stax	b
	mvi	a,0aah
	ldax	b
	cpi	56h
	jnz	fail
	lxi	b,0
	lxi	d,work
	stax	d
	mvi	a,0aah
	ldax	d
	cpi	56h
	jnz	fail

	mvi	a,11h
	sta	work
	mvi	a,22h
	sta	work2
	lhld	work
	mov	a,l
	cpi	11h
	jnz	fail
	mov	a,h
	cpi	22h
	jnz	fail

	lxi	h,4433h
	shld	work
	lda	work
	cpi	33h
	jnz	fail
	lda	work2
	cpi	44h
	jnz	fail

	lxi	d,4321h
	lxi	h,8765h
	xchg
	mov	a,l
	cpi	21h
	jnz	fail
	mov	a,h
	cpi	43h
	jnz	fail
	mov	a,e
	cpi	65h
	jnz	fail
	mov	a,d
	cpi	87h
	jnz	fail

	lxi	b,1122h
	push	b
	lxi	b,0ffffh;
	pop	b
	mov	a,c
	cpi	22h
	jnz	fail
	mov	a,b
	cpi	11h
	jnz	fail

	mvi	a,0ffh
	adi	0ffh
	jnc	fail
	push	psw
	mvi	a,0
	adi	0
	jc	fail
	pop	psw
	jnc	fail

; test pchl
	lxi	h,next
	pchl
	jmp	fail;
next:

; test call
	mvi	a,0cdh
	call	sub
	cpi	0c9h
	jnz	fail

; test all cond
	mvi	a,0
	adi	0
	jnz	fail
	jc	fail
	mvi	a,0
	adi	1
	jz	fail
	mvi	a,0ffh
	adi	1
	jnc	fail
	mvi	a,0feh
	adi	1
	jpo	fail
	mvi	a,0fdh
	adi	1
	jpe	fail
	mvi	a,7fh
	adi	1
	jp	fail
	mvi	a,7eh
	adi	1
	jm	fail

; test c-cond
	mvi	a,0
	adi	0
	cz	sub2
	cpi	2
	jnz	fail
	mvi	a,80h
	adi	80h
	cnz	sub
	cpi	0
	jnz	fail

; test rst
	mvi	a,0
	rst	6
	cpi	60h
	jnz	fail
	rst	5
	cpi	70h
	jnz	fail

; test inr dcr
	mvi	a,0ffh
	mvi	b,01h
	inr	a
	jnz	fail
	dcr	b
	jnz	fail

	mvi	a,7eh
	adi	1
	inr	a
	jc	fail

; test inx dcx
	lxi	b,0ffffh
	inx	b
	mov	a,b
	cmp	c
	jnz	fail
	lxi	h,1
	dcx	h
	mov	a,h
	cmp	l
	jnz	fail

; test XTHL
	lxi	h,1234h
	push	h
	lxi	h,5678h
	xthl
	mov	a,h
	cpi	12h
	jnz	fail
	pop	h
	mov	a,h
	cpi	56h
	jnz	fail

; test SPHL
	lxi	h,stack2
	sphl
	lxi	b,1234h
	push	b
	lxi	h,stack2
	dcx	h
	mov	a,m
	cpi	12h
	jnz	fail

; test stc, cmc
	stc
	jnc	fail
	cmc
	jc	fail

; test adc
	stc
	mvi	a,1
	mvi	b,2
	adc	b
	cpi	4
	jnz	fail

; test aci
	stc
	mvi	a,2
	aci	3
	cpi	6
	jnz	fail

; test dad
	lxi	h,8081h
	lxi	d,0082h
	dad	d
	mov	a,h
	cpi	81h
	jnz	fail
	mov	a,l
	cpi	03h
	jnz	fail
	lxi	h,8000h
	lxi	b,8000h
	stc
	cmc
	dad	b
	jnc	fail

; test sub, sui
	mvi	a,3
	mvi	b,1
	sub	b
	cpi	2
	jnz	fail
	
	mvi	a,4
	sui	3
	cpi	1
	jnz	fail

; test sbb, sbi
	stc
	mvi	a,3
	mvi	b,1
	sbb	b
	cpi	1
	jnz	fail
	
	stc
	mvi	a,4
	sbi	3
	cpi	0
	jnz	fail

; test and, ani
	mvi	a,55h
	mvi	b,0aah
	and	b
	jnz	fail

	mvi	a,0fh
	ani	3
	cpi	3
	jnz	fail

; test ora, ori
	mvi	a,55h
	mvi	b,0aah
	ora	b
	cpi	0ffh
	jnz	fail

	mvi	a,0ch
	ori	3
	cpi	0fh
	jnz	fail

; test xra, xri
	mvi	a,55h
	mvi	b,0aah
	xra	b
	cpi	0ffh
	jnz	fail

	mvi	a,0fh
	xri	3
	cpi	00ch
	jnz	fail

; test rlc
	mvi	a,055h
	rlc
	jc	fail
	mvi	a,0aah
	rlc
	jnc	fail
	cpi	55h
	jnz	fail

; test rrc
	mvi	a,055h
	rrc
	jnc	fail
	mvi	a,0aah
	rrc
	jc	fail
	cpi	55h
	jnz	fail

; test ral
	stc
	mvi	a,055h
	ral
	jc	fail
	cpi	0abh
	jnz	fail
	mvi	a,80h
	ral
	jnc	fail
	cpi	0
	jnz	fail

; test rar
	stc
	mvi	a,055h
	rar
	jnc	fail
	cpi	0aah
	jnz	fail
	mvi	a,1
	rar
	jnc	fail
	cpi	0
	jnz	fail

; test cma
	mvi	a,5ah
	cma
	cpi	0a5h
	jnz	fail

; test daa
	mvi	a,1
	adi	2
	daa
	cpi	3
	jnz	fail

	mvi	a,9
	adi	3
	daa
	cpi	12h
	jnz	fail

	mvi	a,9
	adi	9
	daa
	cpi	18h
	jnz	fail

; test nop,ei,di
	xra	a
	mov	b,a
	mov	c,a
	mov	d,a
	mov	e,a
	mov	h,a
	mov	l,a
	nop
	di
	ei
	ora	b
	ora	c
	ora	d
	ora	e
	ora	h
	ora	l
	jnz	fail

; test SHIFTR
	lxi	h,0
	mvi	c,1
	call	SHIFTR
	mov	a,l
	ora	h
	jnz	fail

	lxi	h,8040h
	mvi	c,2
	call	SHIFTR
	mov	a,h
	cpi	20h
	jnz	fail
	mov	a,l
	cpi	10h
	jnz	fail



	jmp	success

;
;   Shift (HL) right (C) bits.
;
SHIFTR	INR	C
SHIFTR1	DCR	C
	RZ
	MOV	A,H
	ORA	A
	RAR
	MOV	H,A
	MOV	A,L
	RAR
	MOV	L,A
	JMP	SHIFTR1



; test ret
sub:
	mvi	a,0c9h
	ret

; test ret-cond
sub2:
	mvi	a,1
	adi	1
	ret	z
	mvi	a,2
	ret nc
	mvi	a,3
	ret

fail:
	push	psw
	mvi	a,080h
	out	0ffh
	pop	psw
	hlt
success:
	push	psw
	mvi	a,0ffh
	out	0ffh
	pop	psw
	hlt

	end