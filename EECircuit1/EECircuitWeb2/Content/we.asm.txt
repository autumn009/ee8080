; WE.COM
; Web Bases Text Editor in EE8080
; usage WE filename
        ORG     100H
BDOS    EQU     0005H   ;DOS ENTRY POINT
CONS    EQU     1       ;READ CONSOLE
TYPEF   EQU     2       ;TYPE FUNCTION
PRINTF  EQU     9       ;BUFFER PRINT ENTRY
BRKF    EQU     11      ;BREAK KEY FUNCTION (TRUE IF CHAR READY)
OPENF   EQU     15      ;FILE OPEN
CREF    EQU     22      ;CREATE OPEN
CLOSE   EQU     16      ;CLOSE FILE
READF   EQU     20      ;READ FUNCTION
WRF     EQU     21      ;WRITE FUNCTION
;
FCB     EQU     5CH     ;FILE CONTROL BLOCK ADDRESS
BUFF    EQU     80H     ;INPUT DISK BUFFER ADDRESS
;
;       NON GRAPHIC CHARACTERS
CR      EQU     0DH     ;CARRIAGE RETURN
LF      EQU     0AH     ;LINE FEED
;
;       FILE CONTROL BLOCK DEFINITIONS
FCBDN   EQU     FCB+0   ;DISK NAME
FCBFN   EQU     FCB+1   ;FILE NAME
FCBFT   EQU     FCB+9   ;DISK FILE TYPE (3 CHARACTERS)
FCBRL   EQU     FCB+12  ;FILE'S CURRENT REEL NUMBER
FCBRC   EQU     FCB+15  ;FILE'S RECORD COUNT (0 TO 128)
FCBCR   EQU     FCB+32  ;CURRENT (NEXT) RECORD NUMBER (0 TO 127)
FCBLN   EQU     FCB+33  ;FCB LENGTH

; OUTPUT PORTS FOR EE8080
; READ REQUESTS
RQOPEN  EQU     0F8H
RQBUF   EQU     0F9H
RQCLOS  EQU     0FAH
; WRITE REQUESTS
WRQOPEN EQU     0FCH
WRQBUF  EQU     0FDH
WRQCLS  EQU     0FEH

; INPUT PORTS FOR EE8080
; EDIT REQUESTS
NEEDSV  EQU     0F8H	; NEED TO SAVE
EOFFUN  EQU     0F9H    ; EOF CHECK FUNCTION

;       SET UP STACK
        LXI     H,0
        DAD     SP
;       ENTRY STACK POINTER IN HL FROM THE CCP
        SHLD    OLDSP
;       SET SP TO LOCAL STACK AREA (RESTORED AT FINIS)
        LXI     SP,STKTOP
;       READ AND PRINT SUCCESSIVE BUFFERS
        CALL    SETUP   ;SET UP INPUT FILE
        CPI     255     ;255 IF FILE NOT PRESENT
        JNZ     OPENOK  ;SKIP IF OPEN IS OK
;
;       FILE NOT THERE, GIVE ERROR MESSAGE AND RETURN
        LXI     D,ERRMSG
        CALL    MSG
        JMP     FINIS   ;TO RETURN

OPENOK:
		OUT	RQOPEN
GETLOP:
;       READ TO BUFFER
        CALL    DISKR
        ORA     A       ;ZERO VALUE IF READ OK
        JNZ     EOF
		OUT     RQBUF
		JMP     GETLOP

EOF:
		OUT RQCLOS

		HLT	            ; WAIT UNTIL EDIT WAS DONE

		IN  NEEDSV
		ORA A
		JZ  FINIS

        CALL    WSETUP  ;SET UP OUTPUT FILE
        CPI     255     ;255 DIRECTORY FULL
        JNZ     WOPNOK  ;SKIP IF OPEN IS OK

		LXI     D,DIRMSG
        CALL    MSG
        JMP     FINIS   ;TO RETURN

WOPNOK:
		
		OUT	WRQOPEN
WRLOOP:
		IN  EOFFUN
        ORA     A       ;ZERO VALUE IF NO MORE
		JZ      WEOF

;       WRITE FROM BUFFER
        CALL    DISKW
        ORA     A       ;ZERO VALUE IF WRITE OK
        JNZ     WERR
		OUT     WRQBUF
		JMP     WRLOOP

WEOF:
		OUT WRQCLS

; CLOSE FILE
        LXI     D,FCB
        MVI     C,CLOSE
        CALL    BDOS

		LXI    D,OKMSG
		CALL   MSG

FINIS:
;       END OF DUMP, RETURN TO CCP
;       (NOTE THAT A JMP TO 0000H REBOOTS)
        CALL    CRLF
        LHLD    OLDSP
        SPHL
;       STACK POINTER CONTAINS CCP'S STACK LOCATION
        RET             ;TO THE CCP

WERR:
        LXI     D,WEMSG
        CALL    MSG
        JMP     FINIS   ;TO RETURN

PCHAR:  ;PRINT A CHARACTER
        PUSH H! PUSH D! PUSH B; SAVED
        MVI     C,TYPEF
        MOV     E,A
        CALL    BDOS
        POP B! POP D! POP H; RESTORED
        RET

SETUP:  ;SET UP FILE 
;       OPEN THE FILE FOR INPUT
        XRA     A       ;ZERO TO ACCUM
        STA     FCBCR   ;CLEAR CURRENT RECORD
;
        LXI     D,FCB
        MVI     C,OPENF
        CALL    BDOS
;       255 IN ACCUM IF OPEN ERROR
        RET

WSETUP:  ;SET UP FILE 
;       OPEN THE FILE FOR OUTPUT
        XRA     A       ;ZERO TO ACCUM
        STA     FCBCR   ;CLEAR CURRENT RECORD
;
        LXI     D,FCB
        MVI     C,CREF
        CALL    BDOS
;       255 IN ACCUM IF OPEN ERROR
        RET

DISKR:  ;READ DISK FILE RECORD
        PUSH H! PUSH D! PUSH B
        LXI     D,FCB
        MVI     C,READF
        CALL    BDOS
        POP B! POP D! POP H
        RET

DISKW:  ;WRITE DISK FILE RECORD
        PUSH H! PUSH D! PUSH B
        LXI     D,FCB
        MVI     C,WRF
        CALL    BDOS
        POP B! POP D! POP H
        RET

CRLF:
        MVI     A,CR
        CALL    PCHAR
        MVI     A,LF
        CALL    PCHAR
        RET

MSG:    ;PRINT ERROR MESSAGE
;       D,E ADDRESSES MESSAGE ENDING WITH "$"
        MVI     C,PRINTF        ;PRINT BUFFER FUNCTION
        CALL    BDOS
        RET

OLDSP:  DW      0
ERRMSG: DB      'NOT FOUND$'
DIRMSG: DB      'DIRECTORY FULL$'
WEMSG:	DB		'WRITE ERROR$'
OKMSG:  DB      'SAVED$'

;       STACK AREA
        DS      64      ;RESERVE 32 LEVEL STACK
STKTOP:
;
        END
