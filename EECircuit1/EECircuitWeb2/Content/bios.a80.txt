	org	0f200h

offset	equ	2	;number of disk tracks used by cp/m
iobyte	equ	0003h	;address of iobyte
cdisk	equ	0004h	;address of last logged disk on warm start
buff	equ	0080h	;default buffer address
buff80h	equ	0100h
cpmb	equ	0dc00h	;base of cpm console processor
bdos	equ	0e406h	;806h+cpmb basic dos (resident portion)
ndisks	equ	4		;number of disks
retry	equ	10	;max retries on disk i/o before error

	jmp	boot
wboote:	jmp	wboot
	jmp	const
	jmp	conin
	jmp	conout
	jmp	list
	jmp	punch
	jmp	reader
	jmp	home
	jmp	seldsk
	jmp	settrk
	jmp	setsec
	jmp	setdma
	jmp	read
	jmp	write
	jmp	listst	;list status
	jmp	sectran

DPBASE:	DW	TRANS, 0000H
 	DW	0000H, 0000H
  	DW	DIRBF, DPBLK
 	DW	CHK00, ALL00
;	DISK PARAMETER HEADER FOR DISK 01
	DW	TRANS, 0000H
	DW	0000H, 0000H
 	DW	DIRBF, DPBLK
 	DW	CHK01, ALL01
;	DISK PARAMETER HEADER FOR DISK 02
 	DW	TRANS, 0000H
  	DW	0000H, 0000H
  	DW	DIRBF, DPBLK
  	DW	CHK02, ALL02
;	DISK PARAMETER HEADER FOR DISK 03
  	DW	TRANS, 0000H
  	DW	0000H, 0000H
  	DW	DIRBF, DPBLK
  	DW	CHK03, ALL03
;
;	SECTOR TRANSLATE VECTOR
TRANS:	DB	 1,  7, 13, 19	;SECTORS  1,  2,  3,  4
	DB	25,  5, 11, 17	;SECTORS  5,  6,  7,  6
	DB	23,  3,  9, 15	;SECTORS  9, 10, 11, 12
	DB	21,  2,  8, 14	;SECTORS 13, 14, 15, 16
	DB	20, 26,  6, 12	;SECTORS 17, 18, 19, 20
	DB	18, 24,  4, 10	;SECTORS 21, 22, 23, 24
	DB	16, 22		;SECTORS 25, 26
                  ;
DPBLK:	;DISK PARAMETER BLOCK, COMMON TO ALL DISKS
	DW	26		;SECTORS PER TRACK
	DB	3		;BLOCK SHIFT FACTOR
	DB	7		;BLOCK MASK
	DB	0		;NULL MASK
	DW	242		;DISK SIZE-1
	DW	63		;DIRECTORY MAX
	DB	192		;ALLOC 0
	DB	0		;ALLOC 1
	DW	16		;CHECK SIZE
	DW	2		;TRACK OFFSET

DIRBF:	DS	128	 	;SCRATCH DIRECTORY AREA
ALL00:	DS	31	 	;ALLOCATION VECTOR 0
ALL01:	DS	31	 	;ALLOCATION VECTOR 1
ALL02:	DS	31	 	;ALLOCATION VECTOR 2
ALL03:	DS	31	 	;ALLOCATION VECTOR 3
CHK00:	DS	16		;CHECK VECTOR 0
CHK01:	DS	16		;CHECK VECTOR 1
CHK02:	DS	16	 	;CHECK VECTOR 2
CHK03:	DS	16	 	;CHECK VECTOR 3

signon:	db	0dh,0ah,"CP/M 2.2 on EE8080",0dh,0ah,0ah,0

boot:
	lxi	sp,buff80h
	lxi	h,signon
	call	prmsg	;print message
	xra	a	;clear accumulator
	sta	cdisk	;set initially to disk a
	sta	iobyte
	jmp	gocpm	;go to cp/m

wboot:
	lxi	sp,buff	;using dma - thus 80 thru ff available for stack
;
	out	0f2h	; load CP/M request

		;	done with the load, reset default buffer address
gocpm:	;(enter here from cold start boot)
		;	enable rst0 and rst7
	;di

;	set default buffer address to 80h
	lxi	b,buff
	call	setdma

;	reset monitor entry points
	mvi	a,0c3h
	sta	0
	lxi	h,wboote
	shld	1	;jmp wboot at location 00
	sta	5
	lxi	h,bdos
	shld	6	;jmp bdos at location 5
	sta	38h	;jmp to mon80 (may have been changed by ddt)
	lxi	h,halt
	shld	39h

;	leave iobyte set
;	previously selected disk was b, send parameter to cpm
	lda	cdisk	;last logged disk number
	mov	c,a	;send to ccp to log it in
	;ei
	jmp	cpmb

list:
	mvi	a,5
	rst	7
punch:
	mvi	a,6
	rst	7
reader:
	mvi	a,7
	rst	7
setsec:
	mvi	a,0bh
	rst	7
read:
	mvi	a,0dh
	rst	7
write:
	mvi	a,0eh
	rst	7
listst:	;list status
	mvi	a,0fh
	rst	7
sectran:
	mvi	a,010h
	rst	7

setdma:	;set dma address given by regs b,c
	mov	l,c
	mov	h,b
	shld	iod
	ret

seldsk:	;select disk given by register c
	lxi	h,0000h	;return 0000 if error
	mov	a,c
	cpi	ndisks	;too large?
	rnc		;leave HL = 0000
	sta	iodrive
;
	mov	l,c
	mvi	h,0	;HL=disk number
	dad	h	;*2
	dad	h	;*4
	dad	h	;*8
	dad	h	;*16
	lxi	d,dpbase
	dad	d	;HL=disk header table address
	ret

home:	;move to home position
;	treat as track 00 seek
	mvi	c,0
	jmp	settrk

settrk:	;set track address given by c
	lxi	h,iotrack
	mov	m,c
	ret

	; realtime keyscan
const:		;CONSOLE STATUS, RETURN 0FFH IF CHARACTER READY, 00H IF NOT
	mvi	a,000h
	ret

haltmsg	db	"System halted by RTS 7",0
halt:
	lxi	h,haltmsg
	call	prmsg
	mvi	a,0ffh
	hlt

conin:
	in	0f0h	; Request for next character
	in	0f1h	; Get the character
	ora	a
	rnz
	; firefoxの場合0で来る
	lxi	h,coninmsg
	push	psw
	call	prmsg
	pop	psw
	hlt

coninmsg	db	"conin returns 0",0

prmsg:	;print message at h,l to 0
	mov	a,m
	ora	a	;zero?
	rz
;	more to print
	push	h
	mov	c,a
	call	conout
	pop	h
	inx	h
	jmp	prmsg

conout:	;console outout c
	push	psw
	mov	a,c
	out	0f0h	; Output character in ACC
	pop	psw
	ret

;	data areas (must be in ram)
; dbank:	db	0	;disk bank 00 if drive 0,1
			;	   10 if drive 2,3
; iopb:	;io parameter block
	db	80h	;normal i/o operation
; iof:	db	readf	;io function, initial read
; ion:	db	1	;number of sectors to read
; iot:	db	offset	;track number
; ios:	db	1	;sector number
iod:	dw	buff	;io address

; selected drive
iodrive:	db	0		;
iotrack:	db	0

	end
